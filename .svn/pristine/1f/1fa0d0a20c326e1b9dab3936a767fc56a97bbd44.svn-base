@{
    ViewBag.Title = "Requirements";
}

<h1>Requirements</h1>

<div class="alert alert-info" role="alert">
	<b>Important:</b> It's OK if you struggle with parts of this, or don't get it all done! The whole point is to see how you approach a problem, how you think
	about it, and what you're comfortable and familiar with.<br/><br/>
	Feel free to refactor, add libraries, and improve the app all you want. Go ahead and put your best foot forward; the more you write, the more we'll have 
	to discuss!<br/><br/>
	Lastly, <b>please don't feel obligated to spend more than 2-3 hours on this</b> unless of course you want to :)
</div>

<h2>About This App</h2>
<p>
	This is a very simple app that shows a list of data about people. It also contains a list of categories,
	but the two are currently completely unrelated from each other. Your job is to connect these concepts so that Members can be organized into Categories, and each
	Category shows a list of its Members. 
</p>
<p>
	This will involve modifying the database, updating some existing models, adding some simple business logic, working with a little bit of JavaScript,
	and writing a test or two. Although simulated, this does represent the sort of work you'd do as a "full stack" developer on our team.
</p>

<h2>To Do</h2>
<p><i>If you don't know how to do something, skip it. Googling for help is OK too!</i></p>
<ol>
	<li>Add a new column to the Member table for associating a Member with a Category. Establish a non-nullable Primary Key relationship.</li>
	<li>Modify the <a href="/Members/List">Member List</a> page to include a column showing the Category</li>
	<li>Modify the "Add New Member" popup to collect a Category
	<li>Modify the <a href="/Categories/List">Category List</a> page to include a column showing the count of Members</li>
	<li>Add a new business rule: Members cannot be saved if it would create a duplicate Email address</li>
</ol>